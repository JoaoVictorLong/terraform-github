name: "Terrform Workflow"

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
      aws-assume-role-arn:
        type: string
        required: true
      aws-region:
        type: string
        required: true
      aws-state-file-s3-bucket:
        type: string
        required: true
      aws-lock-dynamodb-table:
        type: string
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
  
    defaults:
      run:
        shell: bash
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-assume-role-arn}}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{inputs.aws-aws-region}}
     
      - name: Terraform Init
        run: |
            cd infra && terraform init \
            -breckend-config="bucket=${{inputs.aws-state-file-s3-bucket}}"\
            -breckend-config="key=${{github.event.repository.name}}"\
            -breckend-config="region=${{inputs.aws-region}}" \
            -breckend-config="dynamodb_table=${{inputs.aws-lock-dynamodb-table}}"
      
      - name: Terraform Variadate
        run: terraform validate
      
      - name: Terraform Plan
        run: cd infra && terraform workspace select ${{inputs.environment}} || terraform workspace new ${{inputs.environment}} && terraform plan -var-file="./envs/${{inputs.environment}}/terraform.tfvars" -out="${{inputs.environment}}.plan"
      
      - name: Terraform Apply
        id: terraform-apply
        run: cd infra && terraform workspace select ${{inputs.environment}} || terraform workspace new ${{inputs.environment}} && terraform apply "${{inputs.environment}}.plan"
